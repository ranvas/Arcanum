// <auto-generated />
using System;
using ArcanumLogic.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArcanumLogic.EntityFramework.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20231117114146_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("ArcanumLogic.EntityFramework.Model.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("account_id");

                    b.Property<string>("DestinyPointsStart")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("destiny_points_start");

                    b.Property<decimal>("Experience")
                        .HasColumnType("TEXT")
                        .HasColumnName("exp");

                    b.Property<string>("Fabrica")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("fabrica_searchkey");

                    b.Property<string>("IsVIP")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("is_vip");

                    b.Property<string>("MagicPointsStart")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("magic_points_start");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("character_name");

                    b.Property<string>("Scoring")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("scoring");

                    b.Property<string>("TechPointsStart")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("tech_points_start");

                    b.Property<long>("TgId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("telegram_id");

                    b.Property<string>("TgName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("telegram_name");

                    b.Property<string>("WalletCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("wallet_code");

                    b.Property<string>("ZonesText")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("zones_text");

                    b.HasKey("Id");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("ArcanumLogic.EntityFramework.Model.Bid", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("bid_id");

                    b.Property<long>("AccountId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("account_id");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("currency");

                    b.Property<int>("Cycle")
                        .HasColumnType("INTEGER")
                        .HasColumnName("cycle");

                    b.Property<long>("EmagineId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("imagine_id");

                    b.Property<decimal>("Payed")
                        .HasColumnType("TEXT")
                        .HasColumnName("payed");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("bids", (string)null);
                });

            modelBuilder.Entity("ArcanumLogic.EntityFramework.Model.Fabrica", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("fabrica_id");

                    b.Property<string>("CurrentMax")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("current_max");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("ProgressPerOne")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("progress_per_one");

                    b.Property<string>("SearchKey")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("search_key");

                    b.HasKey("Id");

                    b.ToTable("fabricas", (string)null);
                });

            modelBuilder.Entity("ArcanumLogic.EntityFramework.Model.Imagine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("imagine_id");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("currency");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("MagicValue")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("magic_value");

                    b.Property<string>("SearchKey")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("search_key");

                    b.Property<string>("ValueStart")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("value_start");

                    b.HasKey("Id");

                    b.ToTable("imagines", (string)null);
                });

            modelBuilder.Entity("ArcanumLogic.EntityFramework.Model.Research", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("research_id");

                    b.Property<long?>("AccountId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("account_id");

                    b.Property<string>("SearchKey")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("search_key");

                    b.Property<string>("TimeOfResearch")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("time_of_research");

                    b.HasKey("Id");

                    b.HasIndex("SearchKey");

                    b.ToTable("research", (string)null);
                });

            modelBuilder.Entity("ArcanumLogic.EntityFramework.Model.Transfer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("transfer_id");

                    b.Property<long>("AccountFromId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("account_id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("comment");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("currency");

                    b.Property<decimal>("CurrencyValue")
                        .HasColumnType("TEXT")
                        .HasColumnName("currency_value");

                    b.Property<string>("TransferTime")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("transfer_time");

                    b.HasKey("Id");

                    b.ToTable("transfers", (string)null);
                });

            modelBuilder.Entity("ArcanumLogic.EntityFramework.Model.Tree", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("tree_id");

                    b.Property<string>("Cost")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("cost");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("currency");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("ParentsTree")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("parent_tree");

                    b.Property<string>("SearchKey")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("search_key");

                    b.HasKey("Id");

                    b.ToTable("trees", (string)null);
                });

            modelBuilder.Entity("ArcanumLogic.EntityFramework.Model.Research", b =>
                {
                    b.HasOne("ArcanumLogic.EntityFramework.Model.Tree", "Tree")
                        .WithMany("Researches")
                        .HasForeignKey("SearchKey")
                        .HasPrincipalKey("SearchKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tree");
                });

            modelBuilder.Entity("ArcanumLogic.EntityFramework.Model.Tree", b =>
                {
                    b.Navigation("Researches");
                });
#pragma warning restore 612, 618
        }
    }
}
